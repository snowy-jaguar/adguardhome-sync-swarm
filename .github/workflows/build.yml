# Copyright 2025 snowy-jaguar
# Contact: @snowyjaguar (Discord)
# Contact: contact@snowyjaguar.xyz (Email)

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0

---

name: Build & Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract date-based version info
        run: |
          echo "VERSION=$(date +'%Y.%m')" >> "$GITHUB_ENV"
          echo "DATE_TAG=$(date +'%Y.%m.%d')" >> "$GITHUB_ENV"
          echo "BUILD=$(date -u +'%Y.%m.%d-T%H.%M.%SZ')" >> "$GITHUB_ENV"
          echo "BUILD_RAW=$(date -u +'%Y%m%dT%H%M%SZ')" >> "$GITHUB_ENV"

      - name: Build and push image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ env.VERSION }}
            ghcr.io/${{ github.repository }}:${{ env.DATE_TAG }}
            ghcr.io/${{ github.repository }}:${{ env.BUILD }}
            ghcr.io/${{ github.repository }}:${{ env.BUILD_RAW }}
          build-args: |
            VERSION=${{ env.VERSION }}
            BUILD=${{ env.BUILD }}

      - name: Generate binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/adguardhomesync-swarm-linux-amd64
          sha256sum dist/adguardhomesync-swarm-linux-amd64 > dist/adguardhomesync-swarm-linux-amd64.sha256

      - name: Check and optionally generate CHANGELOG.md
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "CHANGELOG.md not found. Generating..."
            {
              echo "# Changelog"
              echo ""
              echo "## ${BUILD}"
              echo "_Generated on ${DATE_TAG}_"
              echo ""
              git log $(git describe --tags --abbrev=0)..HEAD --no-merges --pretty=format:"- %s (%an)"
              echo ""
            } > CHANGELOG.md
          else
            echo "CHANGELOG.md already exists. Skipping generation."
          fi

      - name: Generate release notes
        run: |
          {
            echo "RELEASE_BODY<<EOF"
            echo "# 📦 Docker Image Release"
            echo ""
            echo "**Tag:** \`${{ env.BUILD }}\`"
            echo "**Version:** \`${{ env.VERSION }}\`"
            echo "**Date:** \`${{ env.DATE_TAG }}\`"
            echo ""
            echo "## 🐳 Docker Tags"
            echo "- \`ghcr.io/${{ github.repository }}:latest\`"
            echo "- \`ghcr.io/${{ github.repository }}:${{ env.VERSION }}\`"
            echo "- \`ghcr.io/${{ github.repository }}:${{ env.DATE_TAG }}\`"
            echo "- \`ghcr.io/${{ github.repository }}:${{ env.VERSION }}-${{ env.BUILD }}\`"
            echo "- \`ghcr.io/${{ github.repository }}:${{ env.VERSION }}-${{ env.BUILD_RAW }}\`"
            echo ""
            echo "## 📥 Docker Pull"
            echo '```bash'
            echo "docker pull ghcr.io/${{ github.repository }}:${{ env.VERSION }}"
            echo "docker pull ghcr.io/${{ github.repository }}:${{ env.DATE_TAG }}"
            echo "docker pull ghcr.io/${{ github.repository }}:${{ env.VERSION }}-${{ env.BUILD }}"
            echo '```'
            echo ""
            echo "## 📝 Changes"
            git log --no-merges --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0)..HEAD
            echo ""
            echo "---"
            echo "For licensing details, see [NOTICE.md](https://github.com/${{ github.repository }}/blob/main/NOTICE.md)"
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.BUILD }}
          name: Release ${{ env.BUILD }}
          body: ${{ env.RELEASE_BODY }}
          files: |
            dist/adguardhomesync-swarm-linux-amd64
            dist/adguardhomesync-swarm-linux-amd64.sha256
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}